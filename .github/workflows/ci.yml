name: C++ CI

# Executar o fluxo de trabalho em pushes e pull requests para a branch main

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

# Garantir que apenas uma execução do fluxo de trabalho por branch esteja em andamento
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
    build_and_test:
        runs-on: ubuntu-24.04

        # Adicionar permissão de leitura para o conteúdo do repositório
        permissions:
          contents: read
        env:
          BUILD_TYPE: Release
          LAB_ANIM_DELAY_MS: 0

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Set up C++ environment
              uses: aminya/setup-cpp@v1.7.1
              with:
                 compiler: gcc
                 cmake: true
                 ninja: true
                 ccache: true

            - name: Cache build directory
              id: cache-build
              uses: actions/cache@v4
              with:
                  path: build
                  key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt', 'src/**', 'include/**') }}
                  restore-keys: |
                      ${{ runner.os }}-build-

            - name: Configure CMake
              run: |
                mkdir -p build
                cd build
                cmake ..
                cmake --build . --parallel

            - name: Smoke tests (JSON scenarios)
              run: python3 scripts/ci_validate.py ./build/bin/simulador
            
            - name: Publish GitHub Release (attach binary)
              if: startsWith(github.ref, 'refs/tags/v')
              uses: softprops/action-gh-release@v2
              with:
                files: build/bin/simulador
                draft: false
                prerelease: false
                fail_on_unmatched_files: true
              
